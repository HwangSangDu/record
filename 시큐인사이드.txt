비트 코인 , 블록체인
70비트 문제를 풀 수 없기 떄문에 32비트 형식의 문제를 계속 맞추도록 유도한다. 
32비트 문제를 풀다보면 70비트 문제도 풀릴 것이다.
이것이 블록체인의 핵심이다.

P2P형태이므로 P2P공격이 많이 통한다.

* selfish mining 
	: 고의적으로 포크를 일으킨다.
	일반 마이너들이 삽질하도록 만들어버린다.
	실제로 찾아지는 경우는 많지 않는다.
	
* BWH Attack 
	남의 돈을 내가 조금 더 갖는다.
	자신이 속한 pool에서 돈을 더 받게끔 만든다.
	원리는? pool은 공동이므로 나만 돈을 더 버는 것이 아니다 .


	tarket pool에 마이너가 참여한다. 꼭 마이너가 아닌 pool이 참여할 수도 있다.
	victim도 공격을 인지하면 보복 공격을 진행한다. 그렇게 되면 공격게임으로 이어지게되고 그렇게 되면 둘 다 손해를 보게 된다.
	서로 공격을 하지 않는다면 공정하게 profit을 얻게되고 둘 다 공격을 하면 서로 손해를 보게 된다.
	자세히 생각해보면 비트코인 입장에서는 더 좋다.
	
	
* FWA Attack
	
	공격자가 컴퓨팅의 20프로를 가지고 있다면
	원래는 300억을 벌 수 있지만 3프로를 더 벌 수 있다.
	블록을 캐냈다는 것을 인지하고 그리로 바로 간다.
	
	BWH는 다른 사람이 캐낸 것을 훔쳐내는 거라고 한다면
	FWA는 누군가 캐냈다는 정보를 인식하고 가서 fork를 시키는 것이다.
	이렇게 되면 제로섬게임이 아니다. 그리고 비트코인 입장에서도 좋을 것이 없다.
	딜레마는 사라지고 만다.
	
	> 2번쨰 시나리오
	
	soltion을 save하고 다른 pool로 이동해서 fork를 시킨다.
	서로  solution 다른 pool에 쓸 수 있다면 이득을 기하급수적으로 증가시킬 수 있다.
	
	더 큰 pool이 더 큰 이득을 얻을 수 있다. 서로 공격을 취하게 되지 안
	selfish는 어느 정도 컴퓨팅파워가 되어야 이득을 얻을 수 있지만
	FWA는 더 큰 pool이 이득을 더 보지만 작은 pool도 이득본다.
	마이너의 딜레마가 사라지게 된다.
	
	
	pool을 통해 fork를 낸다. 그렇기에 selfish처럼 흔적을 남기지 않게 된다.
	
	
	
	
* 	해결책

	개인보다는 pool에게 가중치를 더 주는 새로운 시스템의 도입
	새로운 형태의 프로토콜을 도입하기에 다양한 문제가 존재한다.
	어떻게 하면 이 문제를 해결할 수 있을까?..
	
	

	
가장 강력한 공격은 FWA공격이 될 수 있다.	
비트 코인은 안전하지 않을 수 있다.



proof of work의 공격해서 이득을 취하는 공격
비트코인 채굴할 양이 적어지지 않는가? 채굴량이 어느 속도로 줄어들고 있는가?













What is HTTP Secure Header?

SOP
same origin Policy Details

스키마	
http 




신뢰하는 기관끼리는 SOP의 영향을 받지 않는다.

사용자를 속일 수 있다.
한 번 우회에서 가는 것을 이용한다.








* 뇌파 인증
	
	- 왜 다른 생체인식이 아닌 뇌파인가?
	
		비밀번호는 털리면 그만
		나를 증명하는 방법
		내가 누구인지 증명할 수 있어야 한다.
		
		기존의 방식 : 
		지문 , 홍채 , 심장박동을 통해 개인을 구분한다.
		장점 : 개인 별 유이무이 특성. 특정장비가 필요없다.
		단점 : 바꿀 수가 없다.
		ex) 찰흙에 나의 지문을 찍어 놓는다면 ...
		
		뇌파는 명시적이지 않으며 뇌파는 지속적으로 바뀐다.
		소비자가 사는 기기로부터 얼마나 정확성을 얼마나 기대할 수 있는가?
		머리에 써야 한다는 점
		장비의 응용사례가 증가하고 있으며 사용성이 좋다.
		
		웨어러블 디바이스를 활용하여 지속적으로 정보수집이 가능하다.
		
		DOS와 트랙픽의 증가의 차이를 어떻게 구분할 수 있을까?
		트래픽이 증가하는 모형을 분석하여 패턴을 찾아낸다.
		이를 확률적으로 표현한다.
	ㄴ
	
	
	
	
	- Back ground
		
		> EEG
		매우 작은 세포들을 클러스터 형식으로 처리하기 위해 필요하다
		
		> ERP(event -related - Potential)
		특정 자극에 대한 발생하는 전기적 신호

		> P300  ERP
		300ms 전후에 발생하는 잠재성을 지닌 값
		거짓말 탐지기에서 많이 사용된다.
	ㄴ
	
	비싸지가 않고 모두 open 소스로 공개되어 있다.
	아두이노와 Matlab을 사용하였다.
	open BCI
	
	
	- 실험설계
		연구자의 개입이 없도록 디자인
		(건강한 실험 참가자)
		외과 수술이력이 없는 사람 
	ㄴ
	
	어떤 데이터를 보여줄 것인가?
	공격자가 해킹하고자 하는 사람의 사진을 외우면 되지 않을까?
	
	
	
	
	
	
	
	
* Universal XSS

	XSS(cross site script)
	
	
	SOP(Same Origin Policy)
	동일 출처 정책
	다른 도메인의 페이지를 로드 할 수 없다. 서로 간 정보교류를 제한한다.
	
	
	
* 실제 생활에서의 무선 네트워킹 해킹
	gilgil 멘토님
	
	Access Point : 네트워크 하드웨어 장치
	
	- beacon flooding attack
		자동으로 등록되어 있는 네트워크의 이름과 동일시하여.. 접속을 못하도록 만든다.
		이름을 마구잡이 형식으로 해서 하는 방식과 동일한 이름의 AP를 생성하는 방식
		교육목적 , 동의하에 하며 불법은 아니지만 그냥 하면 불법이다. 명예훼손여부
	ㄴ	
	
	
	- 와이파이 환경 종류
		- 암호화 되어 있지 않은 경우
		
		- 암호화가 되어 있는 환경
			WEP
			WPA
			WPA2
		ㄴ
		
	ㄴ
	
	
	대응 방안
		> 무선 네트워크를 가급적 사용하지 않는다.
		> WPA2 Entertise를 사용한다.
		> 암호화를 제공하는 어플리케이션을 이용한다.
		네이버와 다음 , \ 암호화를 제공X
		페이스북과 트위터 \ 암호화를 제공
		
		패킷을 잡을 떄 쿠키값을 잡아챌 수 있다.
		
		> 공공장소에서 wireShark 띄워 놓았다면 십중팔구
		
		> 무선해킹에 접근하려면
		무선랜카드 - 사진 참조
		kail or ubuntu
		유튜브 강의 참조
	ㄴ
	
	- 기존해킹과 무선해킹의 차이
		> 기존 해킹
			한둘을 타켓으로 한다.
		
		> 무선해킹
			아무나 걸려나

	ㄴ
	
	
	
	- 소형화
		패킷을 작은 기기로도 잡고 싶다.
		법적인 문제는 많다.
	ㄴ
	
	
	우리나라의 IT산업이 발전하지 못하는 이유?
	대회나가서 1,2등도 하는데 세계적인 제품이 존재하지않는다.
	법적인 제재 그리고 문화의 문제가 아닐런지 싶다.
	
	
	* 무선해킹 최근 신형기기
		와이파이 pineapple
		HackRF
	ㄴ
	
	무선해킹은 기존분야에 비해서 알려지지 않은 것들이 많다.
	소름~ㅋㅋㅋ
	
	
	어떠한 법적인 개선이 필요할까요?
	툴을 만든 사람을 잡아간다.
	
	
	
* 스마트 자동차에 대해 알고 싶어요
	
	발표자 : 이승진 / 그레이 해쉬
	법적인 문제로 인해 특정 모델에대한 취약점을 다루지 못한다.
	자동차업계에서 보안은 매우 민감한 문제
	
	자동차도 보안의 문제에서 벗어날 수 없으며 매우 민감하다.
	최근 보안에 대한 중요성이 증대되고 있다.
	
	- 자동차 해킹 vs  전통적인 해킹
		둘이 크게 차이나지 않음.
		운영체제가 비슷하며
		CPU의 경우 자동차가 더 다양하기는 했지만
		문서로 다 볼 수 있기때문에 그다지 차이나지 않음.
		
		
		차이점 
		자동차 해킹은 인명피해와 직결된다.
		연결되는 것에서 취약점이 존재	
	ㄴ
	
	공기압을 체크해주는 기능 
	USB 등의 포트
	
	소프트웨어와 하드웨어 둘 다 어려워지고 있다.
	
	펌웨어 덤프
	코드를 공개하고도 취약점이 안나와야 정말 좋다고 생각하지만
	산업계에서는 그렇게 생각하지 않는다.
	그렇기에 펌웨어 덤프를 금지시키고 있다.
	
	
	
	
	
	
	
	
	
	attribution
	
	다양한 진실 버전이 있다???
	
	
	
	
* usable security
	
	왜 지문인증을 사용하는가?
	security 솔루션이 효과적이려면 usable해야 한다.
	usable 보안에 있어서 가장 중요한 건 편리성 usable이다.
	
	security 엔지니어들이 너무 많은 것들을 요구하고 있는지도 모르겠다.
	서비스와 웹사이트의 종류가 매우 많아지면서 
	
	
	심볼기호도 매우 적게 사용한다.
	엔트로피 자체가 작다.
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	
	